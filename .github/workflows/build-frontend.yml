name: Build and Test Frontend

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v3

      - name: Use Node 18
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
          cache-dependency-path: "./frontend/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build --if-present

      - name: Test
        run: npm test

  acquire-infrastructure:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    defaults:
      run:
        working-directory: deployment/terraform
    outputs:
      storage_account_name: ${{ steps.tfapply.outputs.storage_account_name  }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v1

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Apply
        id: tfapply
        run: terraform apply --auto-approve

      - name: "Use Terraform Output"
        run: echo ${{ steps.tfapply.outputs.storage_account_name  }}

  deploy-website:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend/build

    needs: [build-and-test, acquire-infrastructure]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Upload to blob storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload-batch --account-name ${{ needs.acquire-infrastructure.outputs.storage_account_name }}  --auth-mode key -d '$web' -s .

      # - name: Purge CDN endpoint
      #   uses: azure/CLI@v1
      #   with:
      #       inlineScript: |
      #           az cdn endpoint purge --content-paths  "/*" --profile-name "CDN_PROFILE_NAME" --name "CDN_ENDPOINT" --resource-group "RESOURCE_GROUP"

      - name: logout
        run: |
          az logout
        if: always()
